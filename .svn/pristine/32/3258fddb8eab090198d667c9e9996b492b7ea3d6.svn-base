sap.ui.jsview('ereportanalyticsnew.report-assignment.owl', {

	/**
	 * Specifies the Controller belonging to this View. In the case that it is not implemented, or that 'null' is returned, this View does not have a
	 * Controller.
	 * 
	 * @memberOf ereportanalyticsnew.index
	 */
	getControllerName : function() {
		return 'ereportanalyticsnew.report-assignment.owl';
	},

	/**
	 * Is initially called once after the Controller has been instantiated. It is the place where the UI is constructed. Since the Controller is given
	 * to this method, its event handlers can be attached right away.
	 * 
	 * @memberOf ereportanalyticsnew.index
	 */
	createContent : function(controller) {
		var _this = this;
		/**
		 * Owl query table
		 */
		var tblReportAssignment = new sap.ui.table.Table(
		// Query all pipeline setting
		{
			visibleRowCount : 10,
			firstVisibleRow : 3,
			selectionMode : sap.ui.table.SelectionMode.Single,
			toolbar : new sap.ui.commons.Toolbar({
				items : [
					// Create
					(function() {
						var btnCreate = new sap.ui.commons.Button({
							text : 'Create',
							width : 60 + 'px',
							enabled : true,
							press : function() {
								_this.openTiPage();
							}
						});
						return btnCreate;
					})(),
					// Edit
					(function() {
						var btnEdit = new sap.ui.commons.Button({
							text : 'Edit',
							width : 60 + 'px',
							enabled : false,
							press : function() {
								_this.openTiPage(_this.getIdFromTable(tblReportAssignment));
							},
						});
						controller.controls['EditButton'] = btnEdit;
						return btnEdit;
					})(),
					// Delete
					(function() {
						var btnDelete = new sap.ui.commons.Button({
							text : 'Delete',
							width : 60 + 'px',
							enabled : false,
							press : function() {
								controller.deleteReportAssignment(_this.getIdFromTable(tblReportAssignment));
							},
						});
						controller.controls['DeleteButton'] = btnDelete;
						return btnDelete;
					})(),
					// Release
					(function() {
						var btnRelease = new sap.ui.commons.Button({
							text : 'Release',
							width : 60 + 'px',
							enabled : false,
							press : function() {
								// TODO
							},
						});
						controller.controls['ReleaseButton'] = btnRelease;
						return btnRelease;
					})(),
				]
			}),
			extension :
			// All extension
			[],
			// ***********************************
			// Column definitions
			// ***********************************
			columns : [
				// @Column - ID
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'ID'
						}),
						width : 50 + 'px',
						sorted : true,
						template : new sap.ui.commons.TextField({
							value : {
								path : 'tableGroupAssignment/id',
							},
						}),
						sortProperty : 'tableGroupAssignment/id',
						filterProperty : 'tableGroupAssignment/id',
					});
					return column;
				})(),

				// @Column - Name
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'Name'
						}),
						width : 200 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/name'),
						sortProperty : 'tableGroupAssignment/name',
						filterProperty : 'tableGroupAssignment/name',
					});
					return column;
				})(),
				// @Column - TableGroupModel
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'Table Group Model'
						}),
						width : 150 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/tableGroupModel/name'),
						sortProperty : 'tableGroupAssignment/tableGroupModel/name',
						filterProperty : 'tableGroupAssignment/tableGroupModel/name',
					});
					return column;
				})(),
				// @Column - Period for the rule
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'Period'
						}),
						width : 200 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/periodTag'),
						sortProperty : 'tableGroupAssignment/periodTag',
						filterProperty : 'tableGroupAssignment/periodTag',
					});
					return column;
				})(),
				// @Column - Rule of create date
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'Create Date'
						}),
						width : 200 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/createTimeCoordinate/description'),
						sortProperty : 'tableGroupAssignment/createTimeCoordinate/description',
						filterProperty : 'tableGroupAssignment/createTimeCoordinate/description',
					});
					return column;
				})(),
				// @Column - Rule of start date
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'Start Date'
						}),
						width : 200 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/startTimeCoordinate/description'),
						sortProperty : 'tableGroupAssignment/startTimeCoordinate/description',
						filterProperty : 'tableGroupAssignment/startTimeCoordinate/description',
					});
					return column;
				})(),
				// @Column - Rule of end date
				(function() {
					var column = new sap.ui.table.Column({
						label : new sap.ui.commons.Label({
							text : 'End Date'
						}),
						width : 200 + 'px',
						template : new sap.ui.commons.TextField().bindValue('tableGroupAssignment/endTimeCoordinate/description'),
						sortProperty : 'tableGroupAssignment/endTimeCoordinate/description',
						filterProperty : 'tableGroupAssignment/endTimeCoordinate/description',
					});
					return column;
				})(),
			],
			rowSelectionChange : function(rowContext) {
				// Check 'Edit/Delete/Release' buttons by if any row selected
				var isRowSelected = false;
				var rowIndex = rowContext.getParameter('rowIndex');
				if (rowIndex !== undefined && rowIndex !== null && rowIndex > -1) {
					isRowSelected = true;
				}
				controller.controls['EditButton'].setEnabled(isRowSelected);
				controller.controls['DeleteButton'].setEnabled(isRowSelected);
				controller.controls['ReleaseButton'].setEnabled(isRowSelected);
			}
		});
		// Register table into control collection
		controller.controls['TableReportAssignment'] = tblReportAssignment;
		// Load data from server into table
		controller.loadAll(function(sender, args) {
			tblReportAssignment.setModel(args.dataModel);
			tblReportAssignment.bindRows('/');
			// Initially sort the table by the first column
			tblReportAssignment.sort(tblReportAssignment.getColumns()[0]);
		});
		return tblReportAssignment;
	},
	/**
	 * Get the id value from a table by selection of specific column index
	 * 
	 * @author I071053
	 * @param tableControl
	 * @param indexOfIdColumn
	 * @returns
	 */
	getIdFromTable : function(tableControl, indexOfIdColumn) {
		if (tableControl == undefined && tableControl == null) {
			return;
		}
		var selectedIndex = tableControl.getSelectedIndex();
		if (selectedIndex !== undefined && selectedIndex !== null) {
			var selectedRow = tableControl.getRows()[selectedIndex];
			indexOfIdColumn = indexOfIdColumn || 0;
			return parseInt(selectedRow.getCells()[indexOfIdColumn].getValue());
		}
	},
	/**
	 * Create Ti page for further usage
	 * 
	 * @author I071053
	 */
	openTiPage : function(id) {
		var shell = sap.ui.getCore().getControl('myShell');
		shell.destroyContent();
		var tiEditReportAssignment = sap.ui.view({
			viewName : 'ereportanalyticsnew.report-assignment.ti',
			type : sap.ui.core.mvc.ViewType.JS
		});
		if (!(id == undefined || id == null)) {
			tiEditReportAssignment.getController().retrieve(id);
		} else {
			tiEditReportAssignment.getController().create();
		}
		shell.setContent(tiEditReportAssignment, true);
	},
});
